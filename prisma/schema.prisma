generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  level     String   @default("user")
  createdAt DateTime @default(now())
  status    String   @default("active")
  name String
  sectionId Int?
  section Section? @relation(fields: [sectionId], references: [id])
  repairRecords RepairRecord[] 
  
}

model Device {
  id         Int      @id @default(autoincrement())
  name       String
  barcode    String
  remark     String?
  status     String   @default("active")
  createdAt  DateTime @default(now())
  expireDate DateTime
  serial     String
  repairRecords RepairRecord[]
}

//แผนก
model Department {
  id        Int       @id @default(autoincrement())
  name      String
  status    String    @default("active")
  createdAt DateTime  @default(now())
  sections  Section[]
}

//ฝ่าย
model Section {
  id           Int        @id @default(autoincrement())
  name         String
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId Int
  createdAt    DateTime   @default(now())
  users User[]
  
}

model RepairRecord {
  id Int @id @default(autoincrement())
  customerName String
  customerPhone String
  deviceName String
  deviceBarcode String
  deviceSerial String
  problem String
  solving String?
  deviceId Int?
  device Device? @relation(fields: [deviceId], references: [id])
  userId Int?
  user User? @relation(fields: [userId], references: [id])
  engineerId Int?
  status String @default("active")
  createdAt DateTime @default(now())
  endJobDate DateTime?
  payDate DateTime?
  amount Int?
  imageBeforeRepair String?
  imageAfterRepair String?
}
